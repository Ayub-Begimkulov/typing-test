{"type":"typescript","text":"import { get, Get } from \"../get\";\nimport { assert, Equals } from \".\";\n\n// simple\nassert<Equals<Get<{ a: 5 }, \"a\">, 5>>(true);\n\n// arrays\nassert<Equals<Get<[1, 2, 3], \"2\">, 3>>(true);\n\n// mixed\nassert<Equals<Get<{ a: [1, { b: [\"a\", \"b\"] }, 3] }, \"a.1.b.1\">, \"b\">>(true);\n\n// wrong path\nassert<Equals<Get<{ a: 5 }, \"b\">, undefined>>(true);\n\n// default value\nassert<Equals<Get<{ a: 5 }, \"b\", \"asdf\">, \"asdf\">>(true);\n\n// default value with undefined\nassert<Equals<Get<{ a: 5; b: undefined }, \"b\", \"asdf\">, \"asdf\">>(true);\n\n// default value with undefined in union\nassert<\n  Equals<Get<{ a: 5; b: number | undefined }, \"b\", \"asdf\">, number | \"asdf\">\n>(true);\n\n// should work with unions correctly\n// union objects\nassert<Equals<Get<{ a: number } | { a: string }, \"a\">, string | number>>(true);\n\n// union arrays\nassert<Equals<Get<{ a: { \"2\": \"hello\" } | [1, 2, 3] }, \"a.2\">, 3 | \"hello\">>(\n  true\n);\n\n// union path\nassert<\n  Equals<Get<{ a: number; b: { c: string } }, \"a\" | \"b.c\">, string | number>\n>(true);\n\n// union path and value\nassert<\n  Equals<\n    Get<\n      { a: number; b: { c: string } } | { a: symbol; b: { c: boolean } },\n      \"a\" | \"b.c\"\n    >,\n    string | number | symbol | boolean\n  >\n>(true);\n\n// should add undefined if one of union types is primitive\nassert<Equals<Get<{ a: number | [1, 2, 3] }, \"a.2\">, 3 | undefined>>(true);\n\n// union type should add undefined for arrays (noUncheckIndexAccess)\nassert<Equals<Get<{ a: number[] }, \"a.2\">, number | undefined>>(true);\n\n// regular arrays, primitive union\nassert<\n  Equals<\n    Get<{ a: (number | { b: number })[] }, \"a.2\">,\n    number | { b: number } | undefined\n  >\n>(true);\n\n// should work correctly with tuplish arrays\n// assert<Equals<Get<[1, \"2\", ...string[]], [\"3\"]>, string | /* 1 | */ undefined>>(\n//   true\n// );\n\n// depth test for arrays, should not give recursion errors\nget([[[[[[[[[0]]]]]]]]], \"0.0.0.0.0.0.0.0\"); // error if we add one more key\n\n// depth test for objects, should not give recursion errors\nget(\n  {\n    a: {\n      b: {\n        c: {\n          d: {\n            e: {\n              f: {\n                g: {\n                  h: { i: { j: { k: { l: { m: { n: { o: 5 } } } } } } },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  \"a.b.c.d.e.f.g.h.i.j.k.l.m.n\" // error if we add 1 more\n);","words":[{"text":"import","type":"Keyword","range":[0,6]},{"text":"get","type":"Identifier","range":[9,12]},{"text":"Get","type":"Identifier","range":[14,17]},{"text":"from","type":"Identifier","range":[20,24]},{"text":"\"../get\"","type":"String","range":[25,33]},{"text":"import","type":"Keyword","range":[35,41]},{"text":"assert","type":"Identifier","range":[44,50]},{"text":"Equals","type":"Identifier","range":[52,58]},{"text":"from","type":"Identifier","range":[61,65]},{"text":"\".\"","type":"String","range":[66,69]},{"text":" simple","type":"Line","range":[72,81]},{"text":"assert","type":"Identifier","range":[82,88]},{"text":"Equals","type":"Identifier","range":[89,95]},{"text":"Get","type":"Identifier","range":[96,99]},{"text":"a","type":"Identifier","range":[102,103]},{"text":"5","type":"Numeric","range":[105,106]},{"text":"\"a\"","type":"String","range":[110,113]},{"text":"5","type":"Numeric","range":[116,117]},{"text":"true","type":"Boolean","range":[120,124]},{"text":" arrays","type":"Line","range":[128,137]},{"text":"assert","type":"Identifier","range":[138,144]},{"text":"Equals","type":"Identifier","range":[145,151]},{"text":"Get","type":"Identifier","range":[152,155]},{"text":"1","type":"Numeric","range":[157,158]},{"text":"2","type":"Numeric","range":[160,161]},{"text":"3","type":"Numeric","range":[163,164]},{"text":"\"2\"","type":"String","range":[167,170]},{"text":"3","type":"Numeric","range":[173,174]},{"text":"true","type":"Boolean","range":[177,181]},{"text":" mixed","type":"Line","range":[185,193]},{"text":"assert","type":"Identifier","range":[194,200]},{"text":"Equals","type":"Identifier","range":[201,207]},{"text":"Get","type":"Identifier","range":[208,211]},{"text":"a","type":"Identifier","range":[214,215]},{"text":"1","type":"Numeric","range":[218,219]},{"text":"b","type":"Identifier","range":[223,224]},{"text":"\"a\"","type":"String","range":[227,230]},{"text":"\"b\"","type":"String","range":[232,235]},{"text":"3","type":"Numeric","range":[240,241]},{"text":"\"a.1.b.1\"","type":"String","range":[246,255]},{"text":"\"b\"","type":"String","range":[258,261]},{"text":"true","type":"Boolean","range":[264,268]},{"text":" wrong path","type":"Line","range":[272,285]},{"text":"assert","type":"Identifier","range":[286,292]},{"text":"Equals","type":"Identifier","range":[293,299]},{"text":"Get","type":"Identifier","range":[300,303]},{"text":"a","type":"Identifier","range":[306,307]},{"text":"5","type":"Numeric","range":[309,310]},{"text":"\"b\"","type":"String","range":[314,317]},{"text":"undefined","type":"Identifier","range":[320,329]},{"text":"true","type":"Boolean","range":[332,336]},{"text":" default value","type":"Line","range":[340,356]},{"text":"assert","type":"Identifier","range":[357,363]},{"text":"Equals","type":"Identifier","range":[364,370]},{"text":"Get","type":"Identifier","range":[371,374]},{"text":"a","type":"Identifier","range":[377,378]},{"text":"5","type":"Numeric","range":[380,381]},{"text":"\"b\"","type":"String","range":[385,388]},{"text":"\"asdf\"","type":"String","range":[390,396]},{"text":"\"asdf\"","type":"String","range":[399,405]},{"text":"true","type":"Boolean","range":[408,412]},{"text":" default value with undefined","type":"Line","range":[416,447]},{"text":"assert","type":"Identifier","range":[448,454]},{"text":"Equals","type":"Identifier","range":[455,461]},{"text":"Get","type":"Identifier","range":[462,465]},{"text":"a","type":"Identifier","range":[468,469]},{"text":"5","type":"Numeric","range":[471,472]},{"text":"b","type":"Identifier","range":[474,475]},{"text":"undefined","type":"Identifier","range":[477,486]},{"text":"\"b\"","type":"String","range":[490,493]},{"text":"\"asdf\"","type":"String","range":[495,501]},{"text":"\"asdf\"","type":"String","range":[504,510]},{"text":"true","type":"Boolean","range":[513,517]},{"text":" default value with undefined in union","type":"Line","range":[521,561]},{"text":"assert","type":"Identifier","range":[562,568]},{"text":"Equals","type":"Identifier","range":[572,578]},{"text":"Get","type":"Identifier","range":[579,582]},{"text":"a","type":"Identifier","range":[585,586]},{"text":"5","type":"Numeric","range":[588,589]},{"text":"b","type":"Identifier","range":[591,592]},{"text":"number","type":"Identifier","range":[594,600]},{"text":"undefined","type":"Identifier","range":[603,612]},{"text":"\"b\"","type":"String","range":[616,619]},{"text":"\"asdf\"","type":"String","range":[621,627]},{"text":"number","type":"Identifier","range":[630,636]},{"text":"\"asdf\"","type":"String","range":[639,645]},{"text":"true","type":"Boolean","range":[649,653]},{"text":" should work with unions correctly","type":"Line","range":[657,693]},{"text":" union objects","type":"Line","range":[694,710]},{"text":"assert","type":"Identifier","range":[711,717]},{"text":"Equals","type":"Identifier","range":[718,724]},{"text":"Get","type":"Identifier","range":[725,728]},{"text":"a","type":"Identifier","range":[731,732]},{"text":"number","type":"Identifier","range":[734,740]},{"text":"a","type":"Identifier","range":[747,748]},{"text":"string","type":"Identifier","range":[750,756]},{"text":"\"a\"","type":"String","range":[760,763]},{"text":"string","type":"Identifier","range":[766,772]},{"text":"number","type":"Identifier","range":[775,781]},{"text":"true","type":"Boolean","range":[784,788]},{"text":" union arrays","type":"Line","range":[792,807]},{"text":"assert","type":"Identifier","range":[808,814]},{"text":"Equals","type":"Identifier","range":[815,821]},{"text":"Get","type":"Identifier","range":[822,825]},{"text":"a","type":"Identifier","range":[828,829]},{"text":"\"2\"","type":"String","range":[833,836]},{"text":"\"hello\"","type":"String","range":[838,845]},{"text":"1","type":"Numeric","range":[851,852]},{"text":"2","type":"Numeric","range":[854,855]},{"text":"3","type":"Numeric","range":[857,858]},{"text":"\"a.2\"","type":"String","range":[863,868]},{"text":"3","type":"Numeric","range":[871,872]},{"text":"\"hello\"","type":"String","range":[875,882]},{"text":"true","type":"Boolean","range":[888,892]},{"text":" union path","type":"Line","range":[897,910]},{"text":"assert","type":"Identifier","range":[911,917]},{"text":"Equals","type":"Identifier","range":[921,927]},{"text":"Get","type":"Identifier","range":[928,931]},{"text":"a","type":"Identifier","range":[934,935]},{"text":"number","type":"Identifier","range":[937,943]},{"text":"b","type":"Identifier","range":[945,946]},{"text":"c","type":"Identifier","range":[950,951]},{"text":"string","type":"Identifier","range":[953,959]},{"text":"\"a\"","type":"String","range":[965,968]},{"text":"\"b.c\"","type":"String","range":[971,976]},{"text":"string","type":"Identifier","range":[979,985]},{"text":"number","type":"Identifier","range":[988,994]},{"text":"true","type":"Boolean","range":[998,1002]},{"text":" union path and value","type":"Line","range":[1006,1029]},{"text":"assert","type":"Identifier","range":[1030,1036]},{"text":"Equals","type":"Identifier","range":[1040,1046]},{"text":"Get","type":"Identifier","range":[1052,1055]},{"text":"a","type":"Identifier","range":[1065,1066]},{"text":"number","type":"Identifier","range":[1068,1074]},{"text":"b","type":"Identifier","range":[1076,1077]},{"text":"c","type":"Identifier","range":[1081,1082]},{"text":"string","type":"Identifier","range":[1084,1090]},{"text":"a","type":"Identifier","range":[1099,1100]},{"text":"symbol","type":"Identifier","range":[1102,1108]},{"text":"b","type":"Identifier","range":[1110,1111]},{"text":"c","type":"Identifier","range":[1115,1116]},{"text":"boolean","type":"Identifier","range":[1118,1125]},{"text":"\"a\"","type":"String","range":[1137,1140]},{"text":"\"b.c\"","type":"String","range":[1143,1148]},{"text":"string","type":"Identifier","range":[1160,1166]},{"text":"number","type":"Identifier","range":[1169,1175]},{"text":"symbol","type":"Identifier","range":[1178,1184]},{"text":"boolean","type":"Identifier","range":[1187,1194]},{"text":"true","type":"Boolean","range":[1201,1205]},{"text":" should add undefined if one of union types is primitive","type":"Line","range":[1209,1267]},{"text":"assert","type":"Identifier","range":[1268,1274]},{"text":"Equals","type":"Identifier","range":[1275,1281]},{"text":"Get","type":"Identifier","range":[1282,1285]},{"text":"a","type":"Identifier","range":[1288,1289]},{"text":"number","type":"Identifier","range":[1291,1297]},{"text":"1","type":"Numeric","range":[1301,1302]},{"text":"2","type":"Numeric","range":[1304,1305]},{"text":"3","type":"Numeric","range":[1307,1308]},{"text":"\"a.2\"","type":"String","range":[1313,1318]},{"text":"3","type":"Numeric","range":[1321,1322]},{"text":"undefined","type":"Identifier","range":[1325,1334]},{"text":"true","type":"Boolean","range":[1337,1341]},{"text":" union type should add undefined for arrays (noUncheckIndexAccess)","type":"Line","range":[1345,1413]},{"text":"assert","type":"Identifier","range":[1414,1420]},{"text":"Equals","type":"Identifier","range":[1421,1427]},{"text":"Get","type":"Identifier","range":[1428,1431]},{"text":"a","type":"Identifier","range":[1434,1435]},{"text":"number","type":"Identifier","range":[1437,1443]},{"text":"\"a.2\"","type":"String","range":[1449,1454]},{"text":"number","type":"Identifier","range":[1457,1463]},{"text":"undefined","type":"Identifier","range":[1466,1475]},{"text":"true","type":"Boolean","range":[1478,1482]},{"text":" regular arrays, primitive union","type":"Line","range":[1486,1520]},{"text":"assert","type":"Identifier","range":[1521,1527]},{"text":"Equals","type":"Identifier","range":[1531,1537]},{"text":"Get","type":"Identifier","range":[1543,1546]},{"text":"a","type":"Identifier","range":[1549,1550]},{"text":"number","type":"Identifier","range":[1553,1559]},{"text":"b","type":"Identifier","range":[1564,1565]},{"text":"number","type":"Identifier","range":[1567,1573]},{"text":"\"a.2\"","type":"String","range":[1582,1587]},{"text":"number","type":"Identifier","range":[1594,1600]},{"text":"b","type":"Identifier","range":[1605,1606]},{"text":"number","type":"Identifier","range":[1608,1614]},{"text":"undefined","type":"Identifier","range":[1619,1628]},{"text":"true","type":"Boolean","range":[1635,1639]},{"text":" should work correctly with tuplish arrays","type":"Line","range":[1643,1687]},{"text":" assert<Equals<Get<[1, \"2\", ...string[]], [\"3\"]>, string | /* 1 | */ undefined>>(","type":"Line","range":[1688,1771]},{"text":"   true","type":"Line","range":[1772,1781]},{"text":" );","type":"Line","range":[1782,1787]},{"text":" depth test for arrays, should not give recursion errors","type":"Line","range":[1789,1847]},{"text":"get","type":"Identifier","range":[1848,1851]},{"text":"0","type":"Numeric","range":[1861,1862]},{"text":"\"0.0.0.0.0.0.0.0\"","type":"String","range":[1873,1890]},{"text":" error if we add one more key","type":"Line","range":[1893,1924]},{"text":" depth test for objects, should not give recursion errors","type":"Line","range":[1926,1985]},{"text":"get","type":"Identifier","range":[1986,1989]},{"text":"a","type":"Identifier","range":[1999,2000]},{"text":"b","type":"Identifier","range":[2010,2011]},{"text":"c","type":"Identifier","range":[2023,2024]},{"text":"d","type":"Identifier","range":[2038,2039]},{"text":"e","type":"Identifier","range":[2055,2056]},{"text":"f","type":"Identifier","range":[2074,2075]},{"text":"g","type":"Identifier","range":[2095,2096]},{"text":"h","type":"Identifier","range":[2118,2119]},{"text":"i","type":"Identifier","range":[2123,2124]},{"text":"j","type":"Identifier","range":[2128,2129]},{"text":"k","type":"Identifier","range":[2133,2134]},{"text":"l","type":"Identifier","range":[2138,2139]},{"text":"m","type":"Identifier","range":[2143,2144]},{"text":"n","type":"Identifier","range":[2148,2149]},{"text":"o","type":"Identifier","range":[2153,2154]},{"text":"5","type":"Numeric","range":[2156,2157]},{"text":"\"a.b.c.d.e.f.g.h.i.j.k.l.m.n\"","type":"String","range":[2271,2300]},{"text":" error if we add 1 more","type":"Line","range":[2301,2326]}]}