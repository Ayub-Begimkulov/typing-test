{"type":"typescript","text":"import { Children, ReactElement } from \"react\";\nimport { hasOwn } from \".\";\n\ntype ChildMapping = Record<string, ReactElement>;\n\nexport function getChildMapping(children: ReactElement[]) {\n  const result: ChildMapping = {};\n  children.forEach(child => {\n    // at this point we can be sure that children have keys\n    result[child.key!] = child;\n  });\n  return result;\n}\n\nexport function mergeChildMappings(prev: ChildMapping, next: ChildMapping) {\n  function getValueForKey(key: string) {\n    return hasOwn(next, key) ? next[key] : prev[key];\n  }\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  const nextKeysPending = Object.create(null);\n\n  let pendingKeys: string[] = [];\n  for (const prevKey in prev) {\n    if (hasOwn(next, prevKey)) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  let i, l;\n  const childMapping: ChildMapping = {};\n  for (const nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0, l = nextKeysPending[nextKey].length; i < l; i++) {\n        const pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[pendingNextKey] = getValueForKey(pendingNextKey);\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey);\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (i = 0, l = pendingKeys.length; i < l; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\n// check whether the children are the same\n// using keys\nexport function areChildrenEqual(\n  arr1: React.ReactElement[],\n  arr2: React.ReactElement[]\n) {\n  if (arr1 === arr2) return true;\n  if (arr1.length !== arr2.length) return false;\n  for (let i = 0, l = arr1.length; i < l; i++) {\n    if (arr1[i].key !== arr2[i].key) return false;\n  }\n  return true;\n}\n\nexport function ensureChildrenKeys(children: ReactElement | ReactElement[]) {\n  const seen = new Set();\n  Children.forEach(children, child => {\n    if (!child.key) {\n      throw new Error(\n        \"[retransition]: <TransitionGroup /> children must have unique keys.\"\n      );\n    }\n    if (seen.has(child.key)) {\n      throw new Error(\n        \"[retransition]: Duplicate key \" +\n          child.key +\n          \". <TransitionGroup /> children must have unique keys.\"\n      );\n    }\n    seen.add(child.key);\n  });\n}\n\nexport function getElementProps(\n  child: ReactElement,\n  key: string,\n  defaultValue?: any\n) {\n  if (hasOwn(child.props, key)) return child.props[key];\n  return defaultValue;\n}","words":[{"text":"import","type":"Keyword","range":[0,6]},{"text":"Children","type":"Identifier","range":[9,17]},{"text":"ReactElement","type":"Identifier","range":[19,31]},{"text":"from","type":"Identifier","range":[34,38]},{"text":"\"react\"","type":"String","range":[39,46]},{"text":"import","type":"Keyword","range":[48,54]},{"text":"hasOwn","type":"Identifier","range":[57,63]},{"text":"from","type":"Identifier","range":[66,70]},{"text":"\".\"","type":"String","range":[71,74]},{"text":"type","type":"Identifier","range":[77,81]},{"text":"ChildMapping","type":"Identifier","range":[82,94]},{"text":"Record","type":"Identifier","range":[97,103]},{"text":"string","type":"Identifier","range":[104,110]},{"text":"ReactElement","type":"Identifier","range":[112,124]},{"text":"export","type":"Keyword","range":[128,134]},{"text":"function","type":"Keyword","range":[135,143]},{"text":"getChildMapping","type":"Identifier","range":[144,159]},{"text":"children","type":"Identifier","range":[160,168]},{"text":"ReactElement","type":"Identifier","range":[170,182]},{"text":"const","type":"Keyword","range":[190,195]},{"text":"result","type":"Identifier","range":[196,202]},{"text":"ChildMapping","type":"Identifier","range":[204,216]},{"text":"children","type":"Identifier","range":[225,233]},{"text":"forEach","type":"Identifier","range":[234,241]},{"text":"child","type":"Identifier","range":[242,247]},{"text":" at this point we can be sure that children have keys","type":"Line","range":[257,312]},{"text":"result","type":"Identifier","range":[317,323]},{"text":"child","type":"Identifier","range":[324,329]},{"text":"key","type":"Identifier","range":[330,333]},{"text":"child","type":"Identifier","range":[338,343]},{"text":"return","type":"Keyword","range":[353,359]},{"text":"result","type":"Identifier","range":[360,366]},{"text":"export","type":"Keyword","range":[371,377]},{"text":"function","type":"Keyword","range":[378,386]},{"text":"mergeChildMappings","type":"Identifier","range":[387,405]},{"text":"prev","type":"Identifier","range":[406,410]},{"text":"ChildMapping","type":"Identifier","range":[412,424]},{"text":"next","type":"Identifier","range":[426,430]},{"text":"ChildMapping","type":"Identifier","range":[432,444]},{"text":"function","type":"Keyword","range":[450,458]},{"text":"getValueForKey","type":"Identifier","range":[459,473]},{"text":"key","type":"Identifier","range":[474,477]},{"text":"string","type":"Identifier","range":[479,485]},{"text":"return","type":"Keyword","range":[493,499]},{"text":"hasOwn","type":"Identifier","range":[500,506]},{"text":"next","type":"Identifier","range":[507,511]},{"text":"key","type":"Identifier","range":[513,516]},{"text":"next","type":"Identifier","range":[520,524]},{"text":"key","type":"Identifier","range":[525,528]},{"text":"prev","type":"Identifier","range":[532,536]},{"text":"key","type":"Identifier","range":[537,540]},{"text":" For each key of `next`, the list of keys to insert before that key in","type":"Line","range":[550,622]},{"text":" the combined list","type":"Line","range":[625,645]},{"text":"const","type":"Keyword","range":[648,653]},{"text":"nextKeysPending","type":"Identifier","range":[654,669]},{"text":"Object","type":"Identifier","range":[672,678]},{"text":"create","type":"Identifier","range":[679,685]},{"text":"null","type":"Keyword","range":[686,690]},{"text":"let","type":"Keyword","range":[696,699]},{"text":"pendingKeys","type":"Identifier","range":[700,711]},{"text":"string","type":"Identifier","range":[713,719]},{"text":"for","type":"Keyword","range":[730,733]},{"text":"const","type":"Keyword","range":[735,740]},{"text":"prevKey","type":"Identifier","range":[741,748]},{"text":"in","type":"Keyword","range":[749,751]},{"text":"prev","type":"Identifier","range":[752,756]},{"text":"if","type":"Keyword","range":[764,766]},{"text":"hasOwn","type":"Identifier","range":[768,774]},{"text":"next","type":"Identifier","range":[775,779]},{"text":"prevKey","type":"Identifier","range":[781,788]},{"text":"if","type":"Keyword","range":[799,801]},{"text":"pendingKeys","type":"Identifier","range":[803,814]},{"text":"length","type":"Identifier","range":[815,821]},{"text":"nextKeysPending","type":"Identifier","range":[833,848]},{"text":"prevKey","type":"Identifier","range":[849,856]},{"text":"pendingKeys","type":"Identifier","range":[860,871]},{"text":"pendingKeys","type":"Identifier","range":[881,892]},{"text":"else","type":"Keyword","range":[913,917]},{"text":"pendingKeys","type":"Identifier","range":[926,937]},{"text":"push","type":"Identifier","range":[938,942]},{"text":"prevKey","type":"Identifier","range":[943,950]},{"text":"let","type":"Keyword","range":[966,969]},{"text":"i","type":"Identifier","range":[970,971]},{"text":"l","type":"Identifier","range":[973,974]},{"text":"const","type":"Keyword","range":[978,983]},{"text":"childMapping","type":"Identifier","range":[984,996]},{"text":"ChildMapping","type":"Identifier","range":[998,1010]},{"text":"for","type":"Keyword","range":[1019,1022]},{"text":"const","type":"Keyword","range":[1024,1029]},{"text":"nextKey","type":"Identifier","range":[1030,1037]},{"text":"in","type":"Keyword","range":[1038,1040]},{"text":"next","type":"Identifier","range":[1041,1045]},{"text":"if","type":"Keyword","range":[1053,1055]},{"text":"nextKeysPending","type":"Identifier","range":[1057,1072]},{"text":"nextKey","type":"Identifier","range":[1073,1080]},{"text":"for","type":"Keyword","range":[1091,1094]},{"text":"i","type":"Identifier","range":[1096,1097]},{"text":"0","type":"Numeric","range":[1100,1101]},{"text":"l","type":"Identifier","range":[1103,1104]},{"text":"nextKeysPending","type":"Identifier","range":[1107,1122]},{"text":"nextKey","type":"Identifier","range":[1123,1130]},{"text":"length","type":"Identifier","range":[1132,1138]},{"text":"i","type":"Identifier","range":[1140,1141]},{"text":"l","type":"Identifier","range":[1144,1145]},{"text":"i","type":"Identifier","range":[1147,1148]},{"text":"const","type":"Keyword","range":[1162,1167]},{"text":"pendingNextKey","type":"Identifier","range":[1168,1182]},{"text":"nextKeysPending","type":"Identifier","range":[1185,1200]},{"text":"nextKey","type":"Identifier","range":[1201,1208]},{"text":"i","type":"Identifier","range":[1210,1211]},{"text":"childMapping","type":"Identifier","range":[1222,1234]},{"text":"pendingNextKey","type":"Identifier","range":[1235,1249]},{"text":"getValueForKey","type":"Identifier","range":[1253,1267]},{"text":"pendingNextKey","type":"Identifier","range":[1268,1282]},{"text":"childMapping","type":"Identifier","range":[1303,1315]},{"text":"nextKey","type":"Identifier","range":[1316,1323]},{"text":"getValueForKey","type":"Identifier","range":[1327,1341]},{"text":"nextKey","type":"Identifier","range":[1342,1349]},{"text":" Finally, add the keys which didn't appear before any key in `next`","type":"Line","range":[1359,1428]},{"text":"for","type":"Keyword","range":[1431,1434]},{"text":"i","type":"Identifier","range":[1436,1437]},{"text":"0","type":"Numeric","range":[1440,1441]},{"text":"l","type":"Identifier","range":[1443,1444]},{"text":"pendingKeys","type":"Identifier","range":[1447,1458]},{"text":"length","type":"Identifier","range":[1459,1465]},{"text":"i","type":"Identifier","range":[1467,1468]},{"text":"l","type":"Identifier","range":[1471,1472]},{"text":"i","type":"Identifier","range":[1474,1475]},{"text":"childMapping","type":"Identifier","range":[1485,1497]},{"text":"pendingKeys","type":"Identifier","range":[1498,1509]},{"text":"i","type":"Identifier","range":[1510,1511]},{"text":"getValueForKey","type":"Identifier","range":[1516,1530]},{"text":"pendingKeys","type":"Identifier","range":[1531,1542]},{"text":"i","type":"Identifier","range":[1543,1544]},{"text":"return","type":"Keyword","range":[1555,1561]},{"text":"childMapping","type":"Identifier","range":[1562,1574]},{"text":" check whether the children are the same","type":"Line","range":[1579,1621]},{"text":" using keys","type":"Line","range":[1622,1635]},{"text":"export","type":"Keyword","range":[1636,1642]},{"text":"function","type":"Keyword","range":[1643,1651]},{"text":"areChildrenEqual","type":"Identifier","range":[1652,1668]},{"text":"arr1","type":"Identifier","range":[1672,1676]},{"text":"React","type":"Identifier","range":[1678,1683]},{"text":"ReactElement","type":"Identifier","range":[1684,1696]},{"text":"arr2","type":"Identifier","range":[1702,1706]},{"text":"React","type":"Identifier","range":[1708,1713]},{"text":"ReactElement","type":"Identifier","range":[1714,1726]},{"text":"if","type":"Keyword","range":[1735,1737]},{"text":"arr1","type":"Identifier","range":[1739,1743]},{"text":"arr2","type":"Identifier","range":[1748,1752]},{"text":"return","type":"Keyword","range":[1754,1760]},{"text":"true","type":"Boolean","range":[1761,1765]},{"text":"if","type":"Keyword","range":[1769,1771]},{"text":"arr1","type":"Identifier","range":[1773,1777]},{"text":"length","type":"Identifier","range":[1778,1784]},{"text":"arr2","type":"Identifier","range":[1789,1793]},{"text":"length","type":"Identifier","range":[1794,1800]},{"text":"return","type":"Keyword","range":[1802,1808]},{"text":"false","type":"Boolean","range":[1809,1814]},{"text":"for","type":"Keyword","range":[1818,1821]},{"text":"let","type":"Keyword","range":[1823,1826]},{"text":"i","type":"Identifier","range":[1827,1828]},{"text":"0","type":"Numeric","range":[1831,1832]},{"text":"l","type":"Identifier","range":[1834,1835]},{"text":"arr1","type":"Identifier","range":[1838,1842]},{"text":"length","type":"Identifier","range":[1843,1849]},{"text":"i","type":"Identifier","range":[1851,1852]},{"text":"l","type":"Identifier","range":[1855,1856]},{"text":"i","type":"Identifier","range":[1858,1859]},{"text":"if","type":"Keyword","range":[1869,1871]},{"text":"arr1","type":"Identifier","range":[1873,1877]},{"text":"i","type":"Identifier","range":[1878,1879]},{"text":"key","type":"Identifier","range":[1881,1884]},{"text":"arr2","type":"Identifier","range":[1889,1893]},{"text":"i","type":"Identifier","range":[1894,1895]},{"text":"key","type":"Identifier","range":[1897,1900]},{"text":"return","type":"Keyword","range":[1902,1908]},{"text":"false","type":"Boolean","range":[1909,1914]},{"text":"return","type":"Keyword","range":[1922,1928]},{"text":"true","type":"Boolean","range":[1929,1933]},{"text":"export","type":"Keyword","range":[1938,1944]},{"text":"function","type":"Keyword","range":[1945,1953]},{"text":"ensureChildrenKeys","type":"Identifier","range":[1954,1972]},{"text":"children","type":"Identifier","range":[1973,1981]},{"text":"ReactElement","type":"Identifier","range":[1983,1995]},{"text":"ReactElement","type":"Identifier","range":[1998,2010]},{"text":"const","type":"Keyword","range":[2018,2023]},{"text":"seen","type":"Identifier","range":[2024,2028]},{"text":"new","type":"Keyword","range":[2031,2034]},{"text":"Set","type":"Identifier","range":[2035,2038]},{"text":"Children","type":"Identifier","range":[2044,2052]},{"text":"forEach","type":"Identifier","range":[2053,2060]},{"text":"children","type":"Identifier","range":[2061,2069]},{"text":"child","type":"Identifier","range":[2071,2076]},{"text":"if","type":"Keyword","range":[2086,2088]},{"text":"child","type":"Identifier","range":[2091,2096]},{"text":"key","type":"Identifier","range":[2097,2100]},{"text":"throw","type":"Keyword","range":[2110,2115]},{"text":"new","type":"Keyword","range":[2116,2119]},{"text":"Error","type":"Identifier","range":[2120,2125]},{"text":"\"[retransition]: <TransitionGroup /> children must have unique keys.\"","type":"String","range":[2135,2204]},{"text":"if","type":"Keyword","range":[2224,2226]},{"text":"seen","type":"Identifier","range":[2228,2232]},{"text":"has","type":"Identifier","range":[2233,2236]},{"text":"child","type":"Identifier","range":[2237,2242]},{"text":"key","type":"Identifier","range":[2243,2246]},{"text":"throw","type":"Keyword","range":[2257,2262]},{"text":"new","type":"Keyword","range":[2263,2266]},{"text":"Error","type":"Identifier","range":[2267,2272]},{"text":"\"[retransition]: Duplicate key \"","type":"String","range":[2282,2314]},{"text":"child","type":"Identifier","range":[2327,2332]},{"text":"key","type":"Identifier","range":[2333,2336]},{"text":"\". <TransitionGroup /> children must have unique keys.\"","type":"String","range":[2349,2404]},{"text":"seen","type":"Identifier","range":[2424,2428]},{"text":"add","type":"Identifier","range":[2429,2432]},{"text":"child","type":"Identifier","range":[2433,2438]},{"text":"key","type":"Identifier","range":[2439,2442]},{"text":"export","type":"Keyword","range":[2454,2460]},{"text":"function","type":"Keyword","range":[2461,2469]},{"text":"getElementProps","type":"Identifier","range":[2470,2485]},{"text":"child","type":"Identifier","range":[2489,2494]},{"text":"ReactElement","type":"Identifier","range":[2496,2508]},{"text":"key","type":"Identifier","range":[2512,2515]},{"text":"string","type":"Identifier","range":[2517,2523]},{"text":"defaultValue","type":"Identifier","range":[2527,2539]},{"text":"any","type":"Identifier","range":[2542,2545]},{"text":"if","type":"Keyword","range":[2552,2554]},{"text":"hasOwn","type":"Identifier","range":[2556,2562]},{"text":"child","type":"Identifier","range":[2563,2568]},{"text":"props","type":"Identifier","range":[2569,2574]},{"text":"key","type":"Identifier","range":[2576,2579]},{"text":"return","type":"Keyword","range":[2582,2588]},{"text":"child","type":"Identifier","range":[2589,2594]},{"text":"props","type":"Identifier","range":[2595,2600]},{"text":"key","type":"Identifier","range":[2601,2604]},{"text":"return","type":"Keyword","range":[2609,2615]},{"text":"defaultValue","type":"Identifier","range":[2616,2628]}]}