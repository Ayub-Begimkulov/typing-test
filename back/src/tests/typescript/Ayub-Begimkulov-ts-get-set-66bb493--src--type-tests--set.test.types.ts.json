{"type":"typescript","text":"import { assert, Equals } from \".\";\nimport { set, Set } from \"../set\";\n\n// simple\nassert<Equals<Set<{ a: number }, \"a\", string>, { a: string }>>(true);\n\n// nested\nassert<Equals<Set<{ a: { b: number } }, \"a.b\", string>, { a: { b: string } }>>(\n  true\n);\n\n// simple arrays\nassert<Equals<Set<[1, 2, 3], \"1\", 4>, [1, 4, 3]>>(true);\n\n// mixed (objects and arrays)\nassert<\n  Equals<Set<{ a: { b: [1, 2, 3] } }, \"a.b.1\", 4>, { a: { b: [1, 4, 3] } }>\n>(true);\n\n// should change value if not object\ntype TestObject = {\n  a: number;\n  b: { c: number };\n};\n\ntype TestPath = \"b.c.1\";\n\nassert<\n  Equals<\n    Set<TestObject, TestPath, \"asdf\">,\n    {\n      a: number;\n      b: {\n        c: [undefined, \"asdf\"];\n      };\n    }\n  >\n>(true);\n\n// should return the same object if empty path\nassert<Equals<Set<{ a: number }, \"\", string>, { a: number }>>(true);\n\n// should create objects if they are not present\nassert<Equals<Set<{}, \"a.b\", 1>, { a: { b: 1 } }>>(true);\n\n// should create arrays if they are not present\nassert<Equals<Set<[], \"1.2\", 1>, [undefined, [undefined, undefined, 1]]>>(true);\n\n// array but key is not array'ish\nassert<Equals<Set<[1, 2, 3], \"a.b\", 5>, [1, 2, 3] & { a: { b: 5 } }>>(true);\n\n// array but key is not array'ish with readonly\nassert<\n  Equals<\n    Set<readonly [1, 2, 3], \"a.b\", 5>,\n    readonly [1, 2, 3] & { a: { b: 5 } }\n  >\n>(true);\n\n// not tuple arrays - change type\nassert<Equals<Set<{ a: number[] }, \"a.2\", \"asdf\">, { a: (number | \"asdf\")[] }>>(\n  true\n);\n\n// should work with unions correctly\n// union objects\nassert<\n  Equals<\n    Set<{ a: string } | { b: number }, \"a\", boolean>,\n    | {\n        a: boolean;\n      }\n    | {\n        a: boolean;\n        b: number;\n      }\n  >\n>(true);\n\n// union arrays\nassert<\n  Equals<\n    Set<[\"asdf\", \"fdsa\"] | [1, 2, 3], \"2\", false>,\n    [\"asdf\", \"fdsa\", false] | [1, 2, false]\n  >\n>(true);\n\n// union with primitive\nassert<\n  Equals<\n    Set<{ a: [\"asdf\", \"fdsa\"] | boolean }, \"a.2\", false>,\n    { a: [\"asdf\", \"fdsa\", false] | [undefined, undefined, false] }\n  >\n>(true);\n\n// union path\nassert<\n  Equals<\n    Set<{ a: number; b: { c: string } }, \"a\" | \"b.c\", \"value\">,\n    { a: \"value\"; b: { c: string } } | { a: number; b: { c: \"value\" } }\n  >\n>(true);\n\n// union with union object path\nassert<\n  Equals<\n    Set<\n      { a: number; b: { c: string } } | { prop: false },\n      \"a\" | \"b.c\",\n      \"value\"\n    >,\n    | { a: \"value\"; b: { c: string } }\n    | { a: number; b: { c: \"value\" } }\n    | { prop: false; a: \"value\" }\n    | { prop: false; b: { c: \"value\" } }\n  >\n>(true);\n\n// depth test array\nset([[[[[[[[0]]]]]]]], \"0.0.0.0.0.0.0.0\", 5);\n\n// depth test object\nlet result = set({}, \"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w\", 5);\n\nassert<\n  Equals<typeof result.a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w, number>\n>(true);\n\n// TODO do we need to preserve readonly when using set?\n// assert<\n//   Equals<\n//     Set<Readonly<{ a: 5; b: 6 }>, [\"a\"], \"asdf\">,\n//     Readonly<{ a: \"asdf\"; b: 6 }>\n//   >\n// >(true);","words":[{"text":"import","type":"Keyword","range":[0,6]},{"text":"assert","type":"Identifier","range":[9,15]},{"text":"Equals","type":"Identifier","range":[17,23]},{"text":"from","type":"Identifier","range":[26,30]},{"text":"\".\"","type":"String","range":[31,34]},{"text":"import","type":"Keyword","range":[36,42]},{"text":"set","type":"Identifier","range":[45,48]},{"text":"Set","type":"Identifier","range":[50,53]},{"text":"from","type":"Identifier","range":[56,60]},{"text":"\"../set\"","type":"String","range":[61,69]},{"text":" simple","type":"Line","range":[72,81]},{"text":"assert","type":"Identifier","range":[82,88]},{"text":"Equals","type":"Identifier","range":[89,95]},{"text":"Set","type":"Identifier","range":[96,99]},{"text":"a","type":"Identifier","range":[102,103]},{"text":"number","type":"Identifier","range":[105,111]},{"text":"\"a\"","type":"String","range":[115,118]},{"text":"string","type":"Identifier","range":[120,126]},{"text":"a","type":"Identifier","range":[131,132]},{"text":"string","type":"Identifier","range":[134,140]},{"text":"true","type":"Boolean","range":[145,149]},{"text":" nested","type":"Line","range":[153,162]},{"text":"assert","type":"Identifier","range":[163,169]},{"text":"Equals","type":"Identifier","range":[170,176]},{"text":"Set","type":"Identifier","range":[177,180]},{"text":"a","type":"Identifier","range":[183,184]},{"text":"b","type":"Identifier","range":[188,189]},{"text":"number","type":"Identifier","range":[191,197]},{"text":"\"a.b\"","type":"String","range":[203,208]},{"text":"string","type":"Identifier","range":[210,216]},{"text":"a","type":"Identifier","range":[221,222]},{"text":"b","type":"Identifier","range":[226,227]},{"text":"string","type":"Identifier","range":[229,235]},{"text":"true","type":"Boolean","range":[245,249]},{"text":" simple arrays","type":"Line","range":[254,270]},{"text":"assert","type":"Identifier","range":[271,277]},{"text":"Equals","type":"Identifier","range":[278,284]},{"text":"Set","type":"Identifier","range":[285,288]},{"text":"1","type":"Numeric","range":[290,291]},{"text":"2","type":"Numeric","range":[293,294]},{"text":"3","type":"Numeric","range":[296,297]},{"text":"\"1\"","type":"String","range":[300,303]},{"text":"4","type":"Numeric","range":[305,306]},{"text":"1","type":"Numeric","range":[310,311]},{"text":"4","type":"Numeric","range":[313,314]},{"text":"3","type":"Numeric","range":[316,317]},{"text":"true","type":"Boolean","range":[321,325]},{"text":" mixed (objects and arrays)","type":"Line","range":[329,358]},{"text":"assert","type":"Identifier","range":[359,365]},{"text":"Equals","type":"Identifier","range":[369,375]},{"text":"Set","type":"Identifier","range":[376,379]},{"text":"a","type":"Identifier","range":[382,383]},{"text":"b","type":"Identifier","range":[387,388]},{"text":"1","type":"Numeric","range":[391,392]},{"text":"2","type":"Numeric","range":[394,395]},{"text":"3","type":"Numeric","range":[397,398]},{"text":"\"a.b.1\"","type":"String","range":[405,412]},{"text":"4","type":"Numeric","range":[414,415]},{"text":"a","type":"Identifier","range":[420,421]},{"text":"b","type":"Identifier","range":[425,426]},{"text":"1","type":"Numeric","range":[429,430]},{"text":"4","type":"Numeric","range":[432,433]},{"text":"3","type":"Numeric","range":[435,436]},{"text":"true","type":"Boolean","range":[445,449]},{"text":" should change value if not object","type":"Line","range":[453,489]},{"text":"type","type":"Identifier","range":[490,494]},{"text":"TestObject","type":"Identifier","range":[495,505]},{"text":"a","type":"Identifier","range":[512,513]},{"text":"number","type":"Identifier","range":[515,521]},{"text":"b","type":"Identifier","range":[525,526]},{"text":"c","type":"Identifier","range":[530,531]},{"text":"number","type":"Identifier","range":[533,539]},{"text":"type","type":"Identifier","range":[547,551]},{"text":"TestPath","type":"Identifier","range":[552,560]},{"text":"\"b.c.1\"","type":"String","range":[563,570]},{"text":"assert","type":"Identifier","range":[573,579]},{"text":"Equals","type":"Identifier","range":[583,589]},{"text":"Set","type":"Identifier","range":[595,598]},{"text":"TestObject","type":"Identifier","range":[599,609]},{"text":"TestPath","type":"Identifier","range":[611,619]},{"text":"\"asdf\"","type":"String","range":[621,627]},{"text":"a","type":"Identifier","range":[642,643]},{"text":"number","type":"Identifier","range":[645,651]},{"text":"b","type":"Identifier","range":[659,660]},{"text":"c","type":"Identifier","range":[672,673]},{"text":"undefined","type":"Identifier","range":[676,685]},{"text":"\"asdf\"","type":"String","range":[687,693]},{"text":"true","type":"Boolean","range":[717,721]},{"text":" should return the same object if empty path","type":"Line","range":[725,771]},{"text":"assert","type":"Identifier","range":[772,778]},{"text":"Equals","type":"Identifier","range":[779,785]},{"text":"Set","type":"Identifier","range":[786,789]},{"text":"a","type":"Identifier","range":[792,793]},{"text":"number","type":"Identifier","range":[795,801]},{"text":"\"\"","type":"String","range":[805,807]},{"text":"string","type":"Identifier","range":[809,815]},{"text":"a","type":"Identifier","range":[820,821]},{"text":"number","type":"Identifier","range":[823,829]},{"text":"true","type":"Boolean","range":[834,838]},{"text":" should create objects if they are not present","type":"Line","range":[842,890]},{"text":"assert","type":"Identifier","range":[891,897]},{"text":"Equals","type":"Identifier","range":[898,904]},{"text":"Set","type":"Identifier","range":[905,908]},{"text":"\"a.b\"","type":"String","range":[913,918]},{"text":"1","type":"Numeric","range":[920,921]},{"text":"a","type":"Identifier","range":[926,927]},{"text":"b","type":"Identifier","range":[931,932]},{"text":"1","type":"Numeric","range":[934,935]},{"text":"true","type":"Boolean","range":[942,946]},{"text":" should create arrays if they are not present","type":"Line","range":[950,997]},{"text":"assert","type":"Identifier","range":[998,1004]},{"text":"Equals","type":"Identifier","range":[1005,1011]},{"text":"Set","type":"Identifier","range":[1012,1015]},{"text":"\"1.2\"","type":"String","range":[1020,1025]},{"text":"1","type":"Numeric","range":[1027,1028]},{"text":"undefined","type":"Identifier","range":[1032,1041]},{"text":"undefined","type":"Identifier","range":[1044,1053]},{"text":"undefined","type":"Identifier","range":[1055,1064]},{"text":"1","type":"Numeric","range":[1066,1067]},{"text":"true","type":"Boolean","range":[1072,1076]},{"text":" array but key is not array'ish","type":"Line","range":[1080,1113]},{"text":"assert","type":"Identifier","range":[1114,1120]},{"text":"Equals","type":"Identifier","range":[1121,1127]},{"text":"Set","type":"Identifier","range":[1128,1131]},{"text":"1","type":"Numeric","range":[1133,1134]},{"text":"2","type":"Numeric","range":[1136,1137]},{"text":"3","type":"Numeric","range":[1139,1140]},{"text":"\"a.b\"","type":"String","range":[1143,1148]},{"text":"5","type":"Numeric","range":[1150,1151]},{"text":"1","type":"Numeric","range":[1155,1156]},{"text":"2","type":"Numeric","range":[1158,1159]},{"text":"3","type":"Numeric","range":[1161,1162]},{"text":"a","type":"Identifier","range":[1168,1169]},{"text":"b","type":"Identifier","range":[1173,1174]},{"text":"5","type":"Numeric","range":[1176,1177]},{"text":"true","type":"Boolean","range":[1184,1188]},{"text":" array but key is not array'ish with readonly","type":"Line","range":[1192,1239]},{"text":"assert","type":"Identifier","range":[1240,1246]},{"text":"Equals","type":"Identifier","range":[1250,1256]},{"text":"Set","type":"Identifier","range":[1262,1265]},{"text":"readonly","type":"Identifier","range":[1266,1274]},{"text":"1","type":"Numeric","range":[1276,1277]},{"text":"2","type":"Numeric","range":[1279,1280]},{"text":"3","type":"Numeric","range":[1282,1283]},{"text":"\"a.b\"","type":"String","range":[1286,1291]},{"text":"5","type":"Numeric","range":[1293,1294]},{"text":"readonly","type":"Identifier","range":[1301,1309]},{"text":"1","type":"Numeric","range":[1311,1312]},{"text":"2","type":"Numeric","range":[1314,1315]},{"text":"3","type":"Numeric","range":[1317,1318]},{"text":"a","type":"Identifier","range":[1324,1325]},{"text":"b","type":"Identifier","range":[1329,1330]},{"text":"5","type":"Numeric","range":[1332,1333]},{"text":"true","type":"Boolean","range":[1344,1348]},{"text":" not tuple arrays - change type","type":"Line","range":[1352,1385]},{"text":"assert","type":"Identifier","range":[1386,1392]},{"text":"Equals","type":"Identifier","range":[1393,1399]},{"text":"Set","type":"Identifier","range":[1400,1403]},{"text":"a","type":"Identifier","range":[1406,1407]},{"text":"number","type":"Identifier","range":[1409,1415]},{"text":"\"a.2\"","type":"String","range":[1421,1426]},{"text":"\"asdf\"","type":"String","range":[1428,1434]},{"text":"a","type":"Identifier","range":[1439,1440]},{"text":"number","type":"Identifier","range":[1443,1449]},{"text":"\"asdf\"","type":"String","range":[1452,1458]},{"text":"true","type":"Boolean","range":[1469,1473]},{"text":" should work with unions correctly","type":"Line","range":[1478,1514]},{"text":" union objects","type":"Line","range":[1515,1531]},{"text":"assert","type":"Identifier","range":[1532,1538]},{"text":"Equals","type":"Identifier","range":[1542,1548]},{"text":"Set","type":"Identifier","range":[1554,1557]},{"text":"a","type":"Identifier","range":[1560,1561]},{"text":"string","type":"Identifier","range":[1563,1569]},{"text":"b","type":"Identifier","range":[1576,1577]},{"text":"number","type":"Identifier","range":[1579,1585]},{"text":"\"a\"","type":"String","range":[1589,1592]},{"text":"boolean","type":"Identifier","range":[1594,1601]},{"text":"a","type":"Identifier","range":[1620,1621]},{"text":"boolean","type":"Identifier","range":[1623,1630]},{"text":"a","type":"Identifier","range":[1656,1657]},{"text":"boolean","type":"Identifier","range":[1659,1666]},{"text":"b","type":"Identifier","range":[1676,1677]},{"text":"number","type":"Identifier","range":[1679,1685]},{"text":"true","type":"Boolean","range":[1701,1705]},{"text":" union arrays","type":"Line","range":[1709,1724]},{"text":"assert","type":"Identifier","range":[1725,1731]},{"text":"Equals","type":"Identifier","range":[1735,1741]},{"text":"Set","type":"Identifier","range":[1747,1750]},{"text":"\"asdf\"","type":"String","range":[1752,1758]},{"text":"\"fdsa\"","type":"String","range":[1760,1766]},{"text":"1","type":"Numeric","range":[1771,1772]},{"text":"2","type":"Numeric","range":[1774,1775]},{"text":"3","type":"Numeric","range":[1777,1778]},{"text":"\"2\"","type":"String","range":[1781,1784]},{"text":"false","type":"Boolean","range":[1786,1791]},{"text":"\"asdf\"","type":"String","range":[1799,1805]},{"text":"\"fdsa\"","type":"String","range":[1807,1813]},{"text":"false","type":"Boolean","range":[1815,1820]},{"text":"1","type":"Numeric","range":[1825,1826]},{"text":"2","type":"Numeric","range":[1828,1829]},{"text":"false","type":"Boolean","range":[1831,1836]},{"text":"true","type":"Boolean","range":[1844,1848]},{"text":" union with primitive","type":"Line","range":[1852,1875]},{"text":"assert","type":"Identifier","range":[1876,1882]},{"text":"Equals","type":"Identifier","range":[1886,1892]},{"text":"Set","type":"Identifier","range":[1898,1901]},{"text":"a","type":"Identifier","range":[1904,1905]},{"text":"\"asdf\"","type":"String","range":[1908,1914]},{"text":"\"fdsa\"","type":"String","range":[1916,1922]},{"text":"boolean","type":"Identifier","range":[1926,1933]},{"text":"\"a.2\"","type":"String","range":[1937,1942]},{"text":"false","type":"Boolean","range":[1944,1949]},{"text":"a","type":"Identifier","range":[1958,1959]},{"text":"\"asdf\"","type":"String","range":[1962,1968]},{"text":"\"fdsa\"","type":"String","range":[1970,1976]},{"text":"false","type":"Boolean","range":[1978,1983]},{"text":"undefined","type":"Identifier","range":[1988,1997]},{"text":"undefined","type":"Identifier","range":[1999,2008]},{"text":"false","type":"Boolean","range":[2010,2015]},{"text":"true","type":"Boolean","range":[2025,2029]},{"text":" union path","type":"Line","range":[2033,2046]},{"text":"assert","type":"Identifier","range":[2047,2053]},{"text":"Equals","type":"Identifier","range":[2057,2063]},{"text":"Set","type":"Identifier","range":[2069,2072]},{"text":"a","type":"Identifier","range":[2075,2076]},{"text":"number","type":"Identifier","range":[2078,2084]},{"text":"b","type":"Identifier","range":[2086,2087]},{"text":"c","type":"Identifier","range":[2091,2092]},{"text":"string","type":"Identifier","range":[2094,2100]},{"text":"\"a\"","type":"String","range":[2106,2109]},{"text":"\"b.c\"","type":"String","range":[2112,2117]},{"text":"\"value\"","type":"String","range":[2119,2126]},{"text":"a","type":"Identifier","range":[2135,2136]},{"text":"\"value\"","type":"String","range":[2138,2145]},{"text":"b","type":"Identifier","range":[2147,2148]},{"text":"c","type":"Identifier","range":[2152,2153]},{"text":"string","type":"Identifier","range":[2155,2161]},{"text":"a","type":"Identifier","range":[2170,2171]},{"text":"number","type":"Identifier","range":[2173,2179]},{"text":"b","type":"Identifier","range":[2181,2182]},{"text":"c","type":"Identifier","range":[2186,2187]},{"text":"\"value\"","type":"String","range":[2189,2196]},{"text":"true","type":"Boolean","range":[2207,2211]},{"text":" union with union object path","type":"Line","range":[2215,2246]},{"text":"assert","type":"Identifier","range":[2247,2253]},{"text":"Equals","type":"Identifier","range":[2257,2263]},{"text":"Set","type":"Identifier","range":[2269,2272]},{"text":"a","type":"Identifier","range":[2282,2283]},{"text":"number","type":"Identifier","range":[2285,2291]},{"text":"b","type":"Identifier","range":[2293,2294]},{"text":"c","type":"Identifier","range":[2298,2299]},{"text":"string","type":"Identifier","range":[2301,2307]},{"text":"prop","type":"Identifier","range":[2316,2320]},{"text":"false","type":"Boolean","range":[2322,2327]},{"text":"\"a\"","type":"String","range":[2337,2340]},{"text":"\"b.c\"","type":"String","range":[2343,2348]},{"text":"\"value\"","type":"String","range":[2356,2363]},{"text":"a","type":"Identifier","range":[2379,2380]},{"text":"\"value\"","type":"String","range":[2382,2389]},{"text":"b","type":"Identifier","range":[2391,2392]},{"text":"c","type":"Identifier","range":[2396,2397]},{"text":"string","type":"Identifier","range":[2399,2405]},{"text":"a","type":"Identifier","range":[2418,2419]},{"text":"number","type":"Identifier","range":[2421,2427]},{"text":"b","type":"Identifier","range":[2429,2430]},{"text":"c","type":"Identifier","range":[2434,2435]},{"text":"\"value\"","type":"String","range":[2437,2444]},{"text":"prop","type":"Identifier","range":[2457,2461]},{"text":"false","type":"Boolean","range":[2463,2468]},{"text":"a","type":"Identifier","range":[2470,2471]},{"text":"\"value\"","type":"String","range":[2473,2480]},{"text":"prop","type":"Identifier","range":[2491,2495]},{"text":"false","type":"Boolean","range":[2497,2502]},{"text":"b","type":"Identifier","range":[2504,2505]},{"text":"c","type":"Identifier","range":[2509,2510]},{"text":"\"value\"","type":"String","range":[2512,2519]},{"text":"true","type":"Boolean","range":[2530,2534]},{"text":" depth test array","type":"Line","range":[2538,2557]},{"text":"set","type":"Identifier","range":[2558,2561]},{"text":"0","type":"Numeric","range":[2570,2571]},{"text":"\"0.0.0.0.0.0.0.0\"","type":"String","range":[2581,2598]},{"text":"5","type":"Numeric","range":[2600,2601]},{"text":" depth test object","type":"Line","range":[2605,2625]},{"text":"let","type":"Keyword","range":[2626,2629]},{"text":"result","type":"Identifier","range":[2630,2636]},{"text":"set","type":"Identifier","range":[2639,2642]},{"text":"\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w\"","type":"String","range":[2647,2694]},{"text":"5","type":"Numeric","range":[2696,2697]},{"text":"assert","type":"Identifier","range":[2701,2707]},{"text":"Equals","type":"Identifier","range":[2711,2717]},{"text":"typeof","type":"Keyword","range":[2718,2724]},{"text":"result","type":"Identifier","range":[2725,2731]},{"text":"a","type":"Identifier","range":[2732,2733]},{"text":"b","type":"Identifier","range":[2734,2735]},{"text":"c","type":"Identifier","range":[2736,2737]},{"text":"d","type":"Identifier","range":[2738,2739]},{"text":"e","type":"Identifier","range":[2740,2741]},{"text":"f","type":"Identifier","range":[2742,2743]},{"text":"g","type":"Identifier","range":[2744,2745]},{"text":"h","type":"Identifier","range":[2746,2747]},{"text":"i","type":"Identifier","range":[2748,2749]},{"text":"j","type":"Identifier","range":[2750,2751]},{"text":"k","type":"Identifier","range":[2752,2753]},{"text":"l","type":"Identifier","range":[2754,2755]},{"text":"m","type":"Identifier","range":[2756,2757]},{"text":"n","type":"Identifier","range":[2758,2759]},{"text":"o","type":"Identifier","range":[2760,2761]},{"text":"p","type":"Identifier","range":[2762,2763]},{"text":"q","type":"Identifier","range":[2764,2765]},{"text":"r","type":"Identifier","range":[2766,2767]},{"text":"s","type":"Identifier","range":[2768,2769]},{"text":"t","type":"Identifier","range":[2770,2771]},{"text":"u","type":"Identifier","range":[2772,2773]},{"text":"v","type":"Identifier","range":[2774,2775]},{"text":"w","type":"Identifier","range":[2776,2777]},{"text":"number","type":"Identifier","range":[2779,2785]},{"text":"true","type":"Boolean","range":[2789,2793]},{"text":" TODO do we need to preserve readonly when using set?","type":"Line","range":[2797,2852]},{"text":" assert<","type":"Line","range":[2853,2863]},{"text":"   Equals<","type":"Line","range":[2864,2876]},{"text":"     Set<Readonly<{ a: 5; b: 6 }>, [\"a\"], \"asdf\">,","type":"Line","range":[2877,2929]},{"text":"     Readonly<{ a: \"asdf\"; b: 6 }>","type":"Line","range":[2930,2966]},{"text":"   >","type":"Line","range":[2967,2973]},{"text":" >(true);","type":"Line","range":[2974,2985]}]}